Key Features:

1. We use session to keep user logged in. With Session, we made sure user only access area when they have rights and functions called when they meet all conditions.
2. We use Symfony framework for our MVC website architecture, however, Symfony uses Doctrine for database management, therefore, we managed to scrap every part of Doctrine and wrote our database API separately in pure php.
3. When designing the bid system, we made an algorithm similar to what Ebay uses in its system. In addition, we implemented checks to solve potential anomaly in current price often caused by time delay between queries. 
4. One of the biggest challenges is to monitor when each auction ends, because auction may end without user interaction. In order to solve this, we implemented three ways to end an auction. One is through Mysql Scheduled Event that runs every minute, another is before auction shows, and last but not least is auction countdown timer goes to zero on an active screen. This way, we ensure a smooth auction experience for users.
5. Furthermore, we implemented a recommendation system whose algorithm will recommend similar auctions in the same categories as those of items on which the user has ever bidden, ordered by occurrence of such category from most to least. If there aren't enough auctions, the algorithm will fill it with random ones.
6. We discovered that only one user can be outbid per bid. Therefore, we will find the outbid user and send him an notification about the outbid.

To do:
1. Add more checkpoints to end auctions such as one in expiring auction.
