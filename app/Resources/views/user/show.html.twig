{% extends 'base.html.twig' %}

{% block body %}
<div class="container">

	{% if owner %}
	<h2>User show.html.twig user is owner</h2>
	<div class="row">	
		<div class="col-md-4">
			<img src="http://placehold.it/200/bbbbbb/fff&amp;text={{ user.id }}" class="img-responsive">
		</div>

		<div class="col-md-8">
			<label> User Name : </label>{{user.name}}<br>
			<label> Email : </label>{{user.email}}<br>
			<label><a href="{{ path('user_change_password', {'userID': app.session.get('userID')}) }}"> Change Password</a></label>
		</div>
	</div>

	<div class="row">
		<div class="col-md-12">
			<!-- Nav tabs -->
			<ul class="nav nav-tabs" role="tablist">
				<li role="presentation" class="active"><a href="#buying" aria-controls="buying" role="tab" data-toggle="tab">Buying</a></li>
				<li role="presentation"><a href="#selling" aria-controls="selling" role="tab" data-toggle="tab">Selling</a></li>
				<li role="presentation"><a href="#bought" aria-controls="bought" role="tab" data-toggle="tab">Bought</a></li>
				<li role="presentation"><a href="#sold" aria-controls="sold" role="tab" data-toggle="tab">Sold</a></li>
			</ul>

			<!-- Tab panes -->
			<div class="tab-content">
				<div role="tabpanel" class="tab-pane active" id="buying">
					<table class="table table-striped">
						<thead><tr><th>Item Name</th><th>Bid</th><th>Current Bid</th><th>Time Left</th><th>Details</th></tr></thead>
						<tbody id="buying-table">
						</tbody>
					</table>
				</div>
				<div role="tabpanel" class="tab-pane" id="selling">
					<table class="table table-striped">
						<thead><tr><th>Item Name</th><th>Bid</th><th>Current Bid</th><th>Time Left</th><th>Details</th></tr></thead>
						<tbody id="selling-table">
						</tbody>
					</table>
				</div>
				<div role="tabpanel" class="tab-pane" id="bought">
					<table class="table table-striped">
						<thead><tr><th>Item Name</th><th>Seller Name</th><th>Price</th><th>Date</th></tr></thead>
						<tbody id="bought-table">
						</tbody>
					</table>
				</div>
				<div role="tabpanel" class="tab-pane" id="sold">
					<table class="table table-striped">
						<thead><tr><th>Item Name</th><th>Seller Name</th><th>Price</th><th>Date</th></tr></thead>
						<tbody id="sold-table">
						</tbody>
					</table>
				</div>
			</div>
		</div>
	</div>


	{% else %}
	<div class="row">	
		<h2> user is not owner of profile page </h2>
		{% endif %}
	</div>
</div>

{% endblock %}

{% block javascripts %}
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.8.3/jquery.min.js"></script>
<script type="text/javascript" src="{{asset('assets/vendor/bootstrap/dist/js/jquery.countdown.min.js')}}"></script>
<script>
var auctions = {
	buying: {},
	selling: {},
	bought: {},
	sold: {}
};
var countDownRows = [];
function updateTable(data, category, buttonName) {
	function auctionShowURL(id) {
		var url = '{{ path('auction_show', {'auctionID': 0 })}}';
		return url.replace('0', id);
	} 
	function feedbackShowURL(id) {
		var url = '#';
		return url.replace('0', id);
	}
	for (var key in auctions[category]) {
		if (auctions[category].hasOwnProperty(key)) {
			auctions[category][key].pendingDelete = true;
		}
	}
	// insert or update values
	for (var i = 0; i < data[category].length; ++i) {
		if (category == 'buying' || category == 'selling') {
			if (auctions[category][data[category][i].id]) {
				auctions[category][data[category][i].id].itemName = data[category][i].itemName;
				auctions[category][data[category][i].id].bidValue = data[category][i].bidValue;
				auctions[category][data[category][i].id].currentBid = data[category][i].currentBid;
				auctions[category][data[category][i].id].endAt = data[category][i].endAt;
				var tdArray = $(auctions[category][data[category][i].id].el).children('td');
				$(tdArray[0]).html(auctions[category][data[category][i].id].itemName);
				$(tdArray[1]).html(auctions[category][data[category][i].id].bidValue);
				$(tdArray[2]).html(auctions[category][data[category][i].id].currentBid);
			} else {
				auctions[category][data[category][i].id] = data[category][i];
				auctions[category][data[category][i].id].el = $('<tr><td>' + auctions[category][data[category][i].id].itemName + '</td><td>' + auctions[category][data[category][i].id].bidValue + '</td><td>' + auctions[category][data[category][i].id].currentBid + '</td><td></td><td><a class="btn btn-primary" href="' + auctionShowURL(data[category][i].id) + '" role="button">' + buttonName + '</a></td></tr>');
				$('#' + category + '-table').append(auctions[category][data[category][i].id].el);
				var endTime = new Date(auctions[category][data[category][i].id].endAt.date);
				var tdArray = $(auctions[category][data[category][i].id].el).children('td');
				$(tdArray[3]).countdown(endTime, {elapse: true}).on('update.countdown', function(event) {
					var $this = $(this);
					if (event.elapsed) {
						$this.html('Ended');
					} else {
						$this.html(event.strftime('%H hours : %M mins : %S seconds'));
					}
				});
			}
		} else {
			if (auctions[category][data[category][i].id]) {
			} else {
				auctions[category][data[category][i].id] = data[category][i];
				auctions[category][data[category][i].id].el = $('<tr><td>' + auctions[category][data[category][i].id].itemName + '</td><td>' + auctions[category][data[category][i].id].sellerName + '</td><td>' + auctions[category][data[category][i].id].currentBid + '</td><td>' + auctions[category][data[category][i].id].endAt.date + '</td><td><a class="btn btn-primary" href="' + feedbackShowURL(data[category][i].id) + '" role="button">' + buttonName + '</a></td></tr>');
				$('#' + category + '-table').append(auctions[category][data[category][i].id].el);
			}
		}
		auctions[category][data[category][i].id].pendingDelete = false;
	}
	// remove values
	var toDelete = [];
	for (var key in auctions[category]) {
		if (auctions[category].hasOwnProperty(key) && auctions[category][key].pendingDelete) {
			$(auctions[category][key].el).remove();
			toDelete.push(key);
		}
	}
	for (var i = 0; i < toDelete.length; ++i) {
		auctions[category][toDelete[i]] = undefined;
	}
}
function updateTables() {
	$.get('{{ path('user_api', {'userID': user.id })}}', function(data) {
		updateTable(data, 'buying', 'Go');
		updateTable(data, 'selling', 'Edit');
		updateTable(data, 'bought', 'Feedback');
		updateTable(data, 'sold', 'Feedback');
	});
}
updateTables();
setInterval(updateTables, 5000);
</script>
{% endblock %}
